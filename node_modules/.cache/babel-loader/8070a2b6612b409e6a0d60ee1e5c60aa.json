{"ast":null,"code":"var _jsxFileName = \"D:\\\\pizza\\\\src\\\\components\\\\Slider\\\\Slider.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Slider({\n  children,\n  slides_count\n}) {\n  _s();\n\n  const left_arrow = children.find(item => item.props.type === 'left-arrow');\n  const right_arrow = children.find(item => item.props.type === 'right-arrow');\n  const slides = children.filter(item => item.props.type === 'slide');\n  const [current, setCurrent] = useState(0);\n\n  function leftArrowHandle() {\n    if (current - 1 <= 0) {\n      setCurrent(0);\n      return;\n    }\n\n    setCurrent(current - 1);\n  }\n\n  function rightArrowHandle() {\n    if (current + 1 >= slides.length - slides_count) {\n      const new_curent = slides.length - slides_count;\n      setCurrent(new_curent);\n      return;\n    }\n\n    setCurrent(current + 1);\n  }\n\n  function renderSlides() {\n    let showed = [];\n\n    for (let i = 0; i < slides_count; i++) {\n      showed.push(slides[current + i]);\n    }\n\n    return showed;\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(left_arrow.type, { ...left_arrow.props,\n      onClick: leftArrowHandle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), renderSlides(), /*#__PURE__*/_jsxDEV(right_arrow.type, { ...right_arrow.props,\n      onClick: rightArrowHandle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Slider, \"bEU80ZmgFkvFIa3mtt0tHYEkgcI=\");\n\n_c = Slider;\n\nvar _c;\n\n$RefreshReg$(_c, \"Slider\");","map":{"version":3,"sources":["D:/pizza/src/components/Slider/Slider.js"],"names":["React","useState","Slider","children","slides_count","left_arrow","find","item","props","type","right_arrow","slides","filter","current","setCurrent","leftArrowHandle","rightArrowHandle","length","new_curent","renderSlides","showed","i","push"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;;;AAEA,eAAe,SAASC,MAAT,CAAgB;AAACC,EAAAA,QAAD;AAAUC,EAAAA;AAAV,CAAhB,EAAwC;AAAA;;AACnD,QAAMC,UAAU,GAAGF,QAAQ,CAACG,IAAT,CAAcC,IAAI,IAAIA,IAAI,CAACC,KAAL,CAAWC,IAAX,KAAoB,YAA1C,CAAnB;AACA,QAAMC,WAAW,GAAGP,QAAQ,CAACG,IAAT,CAAcC,IAAI,IAAIA,IAAI,CAACC,KAAL,CAAWC,IAAX,KAAoB,aAA1C,CAApB;AAEA,QAAME,MAAM,GAAGR,QAAQ,CAACS,MAAT,CAAgBL,IAAI,IAAIA,IAAI,CAACC,KAAL,CAAWC,IAAX,KAAoB,OAA5C,CAAf;AAEA,QAAM,CAACI,OAAD,EAASC,UAAT,IAAuBb,QAAQ,CAAC,CAAD,CAArC;;AACA,WAASc,eAAT,GAA0B;AACtB,QAAIF,OAAO,GAAC,CAAT,IAAe,CAAlB,EAAoB;AAChBC,MAAAA,UAAU,CAAC,CAAD,CAAV;AACA;AACH;;AACDA,IAAAA,UAAU,CAACD,OAAO,GAAC,CAAT,CAAV;AAEH;;AAED,WAASG,gBAAT,GAA2B;AACvB,QAAIH,OAAO,GAAC,CAAT,IAAgBF,MAAM,CAACM,MAAP,GAAcb,YAAjC,EAAgD;AAC5C,YAAMc,UAAU,GAAGP,MAAM,CAACM,MAAP,GAAcb,YAAjC;AACAU,MAAAA,UAAU,CAACI,UAAD,CAAV;AACA;AACH;;AACGJ,IAAAA,UAAU,CAACD,OAAO,GAAC,CAAT,CAAV;AAGP;;AAED,WAASM,YAAT,GAAwB;AACpB,QAAIC,MAAM,GAAC,EAAX;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGjB,YAApB,EAAkCiB,CAAC,EAAnC,EAAuC;AACnCD,MAAAA,MAAM,CAACE,IAAP,CAAYX,MAAM,CAACE,OAAO,GAACQ,CAAT,CAAlB;AACH;;AACD,WAAOD,MAAP;AACH;;AAED,sBACI;AAAA,4BACI,QAAC,UAAD,CAAY,IAAZ,OAAqBf,UAAU,CAACG,KAAhC;AAAuC,MAAA,OAAO,EAAEO;AAAhD;AAAA;AAAA;AAAA;AAAA,YADJ,EAEKI,YAAY,EAFjB,eAGI,QAAC,WAAD,CAAa,IAAb,OAAsBT,WAAW,CAACF,KAAlC;AAAyC,MAAA,OAAO,EAAEQ;AAAlD;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA,kBADJ;AAOH;;GA1CuBd,M;;KAAAA,M","sourcesContent":["import React, {useState} from \"react\";\r\n\r\nexport default function Slider({children,slides_count}){\r\n    const left_arrow = children.find(item => item.props.type === 'left-arrow')\r\n    const right_arrow = children.find(item => item.props.type === 'right-arrow')\r\n\r\n    const slides = children.filter(item => item.props.type === 'slide')\r\n\r\n    const [current,setCurrent] = useState(0)\r\n    function leftArrowHandle(){\r\n        if((current-1) <= 0){\r\n            setCurrent(0)\r\n            return\r\n        }\r\n        setCurrent(current-1)\r\n\r\n    }\r\n\r\n    function rightArrowHandle(){\r\n        if((current+1) >= (slides.length-slides_count)) {\r\n            const new_curent = slides.length-slides_count\r\n            setCurrent(new_curent)\r\n            return\r\n        }\r\n            setCurrent(current+1)\r\n\r\n\r\n    }\r\n\r\n    function renderSlides() {\r\n        let showed=[];\r\n        for (let i = 0; i < slides_count; i++) {\r\n            showed.push(slides[current+i])\r\n        }\r\n        return showed\r\n    }\r\n\r\n    return(\r\n        <>\r\n            <left_arrow.type {...left_arrow.props} onClick={leftArrowHandle} />\r\n            {renderSlides()}\r\n            <right_arrow.type {...right_arrow.props} onClick={rightArrowHandle} />\r\n        </>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}